rules:
  - id: dll-hijacking
    languages:
      - python
    message: This package manipulates a trusted application into loading a malicious DLL
    metadata:
      description: Identifies when a malicious package manipulates a trusted application into loading a malicious DLL
    pattern-either:

      # dll side-loading
      - pattern-either:
        - patterns:
          - pattern: "$DLL_LOAD"
          - metavariable-pattern:
              metavariable: $DLL_LOAD
              pattern-either:
                # load inline windows
                - pattern-regex: (?i).*?\.exe\s+.*?\.dll
                # load inline linux
                - pattern-regex: (?i).*?\/bin/.+\s+.*?\.so
                # environment preload
                - pattern-regex: LD_PRELOAD
        - patterns:
          - pattern: $FN($EXE,...,$DLL)
          - metavariable-pattern:
              metavariable: $EXE
              patterns:
                # a string with .exe or /bin/[whatever] in it
                - pattern: "..."
                - pattern-regex: (?i).*?(\.exe|\/bin/.+)
          - metavariable-pattern:
              metavariable: $DLL
              patterns:
                # a string with .dll or .so in it
                - pattern: "..."
                - pattern-regex: (?i).*?\.(dll|so)
	- patterns:
	  - pattern: "..."
	  - pattern-either:
	    # See MITRE ATT&CK "System Binary Proxy Execution" techniques
	    # https://attack.mitre.org/techniques/T1218/
	    - pattern-regex: control(.exe)?\s*\S*.cpl
	    - pattern-regex: cmstp(.exe)?\s*\S*
	    - pattern-regex: InstallUtil(.exe)?\s*\S*
	    - pattern-regex: mshta(.exe)?\s*\S*
	    - pattern-regex: msiexec(.exe)?\s*\S*
	    - pattern-regex: odbcconf(.exe)?.*{REGSVR \S*}
	    - pattern-regex: regsvcs(.exe)?\s*\S*
	    - pattern-regex: regasm(.exe)?\s*\S*
	    - pattern-regex: regsvr32(.exe)?\s*\S*
	    - pattern-regex: rundll32(.exe)?\s*\S*
	    - pattern-regex: verclsid(.exe)?.*{\S*}
	    - pattern-regex: mavinject(.exe)?\s*\d+\s*/INJECTRUNNING\s*\S*
	    - pattern-regex: mmc(.exe)?\s*-Embedding\s*\S*.ms

      # dll injection
      - pattern-either:
        - pattern: ....WriteProcessMemory
        - pattern: ....CreateRemoteThread
        - pattern: ....LoadLibraryA

      # phantom dll
      - patterns:
        # write a library to disk
        - patterns:
            - pattern: |
                ...
                open($DLL,'wb')
                ...
                $FN(...,$EXE,...)
            - metavariable-pattern:
                metavariable: $EXE
                patterns:
                  # a string with .exe or /bin/[whatever] in it
                  - pattern: "..."
                  - pattern-regex: (?i).*?(\.exe|\/bin/.+)
            - metavariable-pattern:
                metavariable: $DLL
                patterns:
                # a string with .dll or .so in it
                  - pattern: "..."
                  - pattern-regex: (?i)\.(dll|so)
            - focus-metavariable: $DLL

    severity: WARNING
    options:
      symbolic_propagation: true
