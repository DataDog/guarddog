rules:
  - id: go-exec-base64
    languages:
      - go
    message: |
      This Go package contains code that decodes a Base64 string and passes it to a potentially dangerous execution function.
      This is a common pattern in obfuscated or malicious code to hide payloads from static analysis.
    metadata:
      description: Identify Base64-decoded content being passed to execution functions in Go
    severity: WARNING
    mode: taint
    pattern-sources:
      - pattern-either:
        - patterns:
          - pattern-either:
            - pattern: base64.$ENC.DecodeString(...)
            - pattern: base64.NewDecoder(base64.$ENC, ...)
            - pattern: base64.$ENC.AppendDecode(...)
            - pattern: |
                base64.$ENC.Decode($DST, []byte($SRC))
                ...
            - pattern: $F := reflect.ValueOf(base64.$ENC.DecodeString)
            - pattern: $F := reflect.ValueOf(base64.$ENC.AppendDecode)
            - pattern: |
                $F := reflect.ValueOf(base64.$ENC.Decode)
                ...
          - metavariable-regex:
              metavariable: $ENC
              regex: (StdEncoding|RawStdEncoding)
        - pattern: |
            $F := reflect.ValueOf(base64.NewDecoder)
            ...
    pattern-sinks:
      - pattern-either:
          - pattern: exec.Command(...)
          - pattern: exec.CommandContext(...)
          - pattern: os.StartProcess(...)
          - pattern: syscall.Exec(...)
          - pattern: syscall.ForkExec(...)
          - pattern: exec.Cmd{...,Args:$ARGS,...}
