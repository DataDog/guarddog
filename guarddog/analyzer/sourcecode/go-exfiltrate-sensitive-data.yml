rules:
  - id: go-exfiltrate-sensitive-data
    languages:
      - go
    message: Identify when a package reads and exfiltrates sensitive data from the
      local system.
    metadata:
      description: This rule identifies when a package reads and exfiltrates sensitive
        data from the local system.
    severity: WARNING
    mode: taint
    pattern-sources:
      - pattern-either:
          - pattern: $S = os.Hostname()
          - pattern: $S = os.Getenv($USER)
          - pattern: $S = os.Environ()
          - patterns:
              - pattern-either:
                  - pattern: |
                      $S = $OS.ReadFile($FILE)
                      ...
                  - patterns:
                      - pattern-either:
                          - pattern: |
                              $OS.Open($FILE)
                              ...
                              $READCONENT
                          - pattern: |
                              $OS.OpenFile($FILE,...)
                              ...
                              $READCONENT
                      - metavariable-pattern:
                          metavariable: $READCONENT
                          pattern-either:
                            - pattern: |
                                $S = $IO.ReadAll($FILE)
                                ...
                            - pattern: $S = $BUFIO.NewScanner($FILE)
                            - pattern: |
                                $S = $BUFIO.NewReader($FILE)
                                ...
                            - pattern: |
                                $S = $F.Read($DATA)
                                ...
                            - pattern: |
                                $S = $F.ReadAll($FILE)
                                ...
              - metavariable-regex:
                  metavariable: $FILE
                  regex: \".*(\.aws\/(credentials|config)|\.config\/gcloud\/credentials|gcp.*\.json|\.azure\/(accessTokens|azureProfile)|\.ssh\/.*|\.git-credentials|\.netrc|\.npmrc|google-chrome\/.*\/(Cookies|Login\s?Data)|firefox\/.*\/(cookies\.sqlite|logins\.json)|\.docker\/config\.json|\.kube\/config)\"
          - patterns:
              - pattern-either:
                  - pattern: |
                      $S = $OS.Getenv($ENVAR)
                      ...
                  - pattern: |
                      $S = $OS.LookupEnv($ENVAR)
                      ...
                  - pattern: |
                      $S = exec.Command(...,$ENVAR)
                      ...
              - metavariable-regex:
                  metavariable: $ENVAR
                  regex: \"(AWS_ACCESS_KEY_ID|AWS_SECRET_ACCESS_KEY|AWS_SESSION_TOKEN|GOOGLE_APPLICATION_CREDENTIALS|AZURE_CLIENT_SECRET|CI_JOB_TOKEN|GITHUB_TOKEN|GITLAB_TOKEN|API_KEY|SECRET_KEY|ACCESS_TOKEN|TOKEN|PASSWORD)\"
    pattern-sinks:
      - pattern-either:
          - pattern: http.Post(...,$S)
          - pattern: http.NewRequest("POST",...,$S)
          - pattern: http.PostForm(...,$S)
          - pattern: $SMTP.SendMail(...,$S)
          - pattern: $NET.LookupHost(...)
          - patterns:
              - pattern: |
                  $CONN,... := $NET.Dial(...)
                  ...
                  $SEND
              - metavariable-pattern:
                  metavariable: $SEND
                  pattern-either:
                    - pattern: $CONN.Write($S)
                    - pattern: $CONN.Write(...,$S)
                    - pattern: $CONN.WriteString($S)
                    - pattern: $CONN.WriteTo($S,...)
                    - pattern: $CONN.WriteMessage($S,...)
                    - pattern: fmt.Fprintf(conn, $S)